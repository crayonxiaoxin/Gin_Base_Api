basePath: /v1
definitions:
  utils.Result:
    properties:
      data: {}
      msg:
        type: string
      rc:
        type: integer
    type: object
info:
  contact:
    name: Code Resources
    url: https://github.com/crayonxiaoxin/Gin_Base_Api
  description: 基于 golang 构建的 API 项目
  title: API Demo
  version: v1
paths:
  /login:
    post:
      description: 登入
      parameters:
      - description: 用户名
        in: query
        name: user_login
        required: true
        type: string
      - description: 密码
        in: query
        name: user_pass
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
        "403":
          description: Forbidden
          schema:
            type: user
      summary: 登入
      tags:
      - 登入 & 注册
  /media:
    get:
      description: 获取所有媒体
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 获取所有媒体
      tags:
      - 媒体相关
  /media/{id}:
    delete:
      description: 删除文件
      parameters:
      - description: 文件ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 删除文件
      tags:
      - 媒体相关
    get:
      description: 通过id获取文件
      parameters:
      - description: 文件id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 通过id获取文件
      tags:
      - 媒体相关
  /posts:
    get:
      description: 获取所有文章
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 获取所有文章
      tags:
      - 文章相关
    post:
      description: 添加文章
      parameters:
      - description: 标题
        in: query
        name: post_title
        required: true
        type: string
      - description: 内容
        in: query
        name: post_content
        required: true
        type: string
      - description: 状态：publish/draft
        in: query
        name: post_status
        type: string
      - description: 类型
        in: query
        name: post_type
        type: string
      - description: 父文章
        in: query
        name: post_parent
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 添加文章
      tags:
      - 文章相关
  /posts/{id}:
    delete:
      description: 删除文章
      parameters:
      - description: 文章id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 删除文章
      tags:
      - 文章相关
    get:
      description: 通过id获取文章
      parameters:
      - description: 文章id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 通过id获取文章
      tags:
      - 文章相关
    put:
      description: 更新文章
      parameters:
      - description: 文章id
        in: path
        name: id
        required: true
        type: integer
      - description: 标题
        in: query
        name: post_title
        required: true
        type: string
      - description: 内容
        in: query
        name: post_content
        required: true
        type: string
      - description: 状态：publish/draft
        in: query
        name: post_status
        type: string
      - description: 类型
        in: query
        name: post_type
        type: string
      - description: 父文章
        in: query
        name: post_parent
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 更新文章
      tags:
      - 文章相关
  /posts/{id}/meta:
    delete:
      description: 删除文章元数据
      parameters:
      - description: 文章id
        in: path
        name: id
        required: true
        type: integer
      - description: Key
        in: query
        name: meta_key
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 删除文章元数据
      tags:
      - 文章相关
    get:
      description: 通过 post_id 获取元数据
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      - description: Key，如果填写，只返回对应值
        in: query
        name: meta_key
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 通过 post_id 获取元数据
      tags:
      - 文章相关
    post:
      description: 更新文章元数据
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      - description: Key
        in: query
        name: meta_key
        required: true
        type: string
      - description: Value
        in: query
        name: meta_value
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 更新文章元数据
      tags:
      - 文章相关
  /register:
    post:
      description: 注册
      parameters:
      - description: 用户名
        in: query
        name: user_login
        required: true
        type: string
      - description: 密码
        in: query
        name: user_pass
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
        "403":
          description: Forbidden
          schema:
            type: user
      summary: 注册
      tags:
      - 登入 & 注册
  /upload:
    post:
      description: 上传
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 上传
      tags:
      - 媒体相关
  /user:
    get:
      description: 获取所有用户
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 获取所有用户
      tags:
      - 用户相关
    post:
      description: 添加用户
      parameters:
      - description: 用户名
        in: query
        name: user_login
        required: true
        type: string
      - description: 密码
        in: query
        name: user_pass
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 添加用户
      tags:
      - 用户相关
  /user/{id}:
    delete:
      description: 删除用户
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 删除用户
      tags:
      - 用户相关
    get:
      description: 通过id获取用户
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 通过id获取用户
      tags:
      - 用户相关
    put:
      description: 更新用户
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      - description: 用户名
        in: query
        name: user_login
        required: true
        type: string
      - description: 密码
        in: query
        name: user_pass
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 更新用户
      tags:
      - 用户相关
  /user/{id}/meta:
    delete:
      description: 删除用户元数据
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      - description: Key
        in: query
        name: meta_key
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 删除用户元数据
      tags:
      - 用户相关
    get:
      description: 通过uid获取元数据
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      - description: Key，如果填写，只返回对应值
        in: query
        name: meta_key
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 通过uid获取元数据
      tags:
      - 用户相关
    post:
      description: 更新用户元数据
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      - description: Key
        in: query
        name: meta_key
        required: true
        type: string
      - description: Value
        in: query
        name: meta_value
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Result'
      security:
      - JwtAuth: []
      summary: 更新用户元数据
      tags:
      - 用户相关
securityDefinitions:
  JwtAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
