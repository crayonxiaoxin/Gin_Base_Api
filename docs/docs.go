// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Code Resources",
            "url": "https://github.com/crayonxiaoxin/Gin_Base_Api"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "登入",
                "tags": [
                    "登入 \u0026 注册"
                ],
                "summary": "登入",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_login",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "user_pass",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "user"
                        }
                    }
                }
            }
        },
        "/media": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "获取所有媒体",
                "tags": [
                    "媒体相关"
                ],
                "summary": "获取所有媒体",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "每页数量",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            }
        },
        "/media/{id}": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "通过id获取文件",
                "tags": [
                    "媒体相关"
                ],
                "summary": "通过id获取文件",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The key for staticblock",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "删除文件",
                "tags": [
                    "媒体相关"
                ],
                "summary": "删除文件",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "文件ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "注册",
                "tags": [
                    "登入 \u0026 注册"
                ],
                "summary": "注册",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_login",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "user_pass",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "user"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "上传",
                "tags": [
                    "媒体相关"
                ],
                "summary": "上传",
                "parameters": [
                    {
                        "type": "file",
                        "description": "文件",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "获取所有用户",
                "tags": [
                    "用户相关"
                ],
                "summary": "获取所有用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "每页数量",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "添加用户",
                "tags": [
                    "用户相关"
                ],
                "summary": "添加用户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_login",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "user_pass",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "通过id获取用户",
                "tags": [
                    "用户相关"
                ],
                "summary": "通过id获取用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The key for staticblock",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "更新用户",
                "tags": [
                    "用户相关"
                ],
                "summary": "更新用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The uid you want to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_login",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "user_pass",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "删除用户",
                "tags": [
                    "用户相关"
                ],
                "summary": "删除用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The uid you want to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            }
        },
        "/user/{id}/meta": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "通过uid获取元数据",
                "tags": [
                    "用户相关"
                ],
                "summary": "通过uid获取元数据",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "用户id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Key，如果填写，只返回对应值",
                        "name": "meta_key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "更新用户元数据",
                "tags": [
                    "用户相关"
                ],
                "summary": "更新用户元数据",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The uid you want to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Key",
                        "name": "meta_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Value",
                        "name": "meta_value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.Result": {
            "type": "object",
            "properties": {
                "data": {},
                "msg": {
                    "type": "string"
                },
                "rc": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JwtAuth": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "API Demo",
	Description:      "基于 golang 构建的 API 项目",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
